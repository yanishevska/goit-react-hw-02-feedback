{"version":3,"sources":["Statistics/Statistics.module.css","Section/Section.module.css","FeedbackOptions/FeedbackOptions.module.css","Notification/Notification.module.css","Section/Section.js","FeedbackOptions/FeedbackOptions.js","Statistics/Statistics.js","Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","container","FeedbackOptions","options","onLeaveFeedback","btnBox","map","option","btnFeedback","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","list","item","countText","Notification","message","notificationContainer","text","App","state","handleIncrement","value","setState","prevState","this","Object","keys","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,UAAY,gC,kBCA9FD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,gBCAjED,EAAOC,QAAU,CAAC,YAAc,uC,gBCAhCD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,sBAAwB,8C,oMCe7DC,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,sBAAKC,UAAWC,IAAEC,UAAlB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,M,gBCgBQI,MApBf,YAAqD,IAA3BC,EAA0B,EAA1BA,QAAQC,EAAkB,EAAlBA,gBAC9B,OACW,qBAAKL,UAAWC,IAAEK,OAAlB,SACFF,EAAQG,KAAI,SAAAC,GAAM,OACf,wBACIR,UAAWC,IAAEQ,YAEbC,KAAK,SACLC,QAASN,EAAgBG,GAJ7B,SAKKA,GAHIA,S,gBCoCVI,MA1Cf,YAMI,IALAC,EAKD,EALCA,KACAC,EAID,EAJCA,QACAC,EAGD,EAHCA,IACAC,EAED,EAFCA,MACAC,EACD,EADCA,mBAEA,OACI,qBAAKjB,UAAWC,IAAEC,UAAlB,SACI,qBAAIF,UAAWC,IAAEiB,KAAjB,UACI,qBAAIlB,UAAWC,IAAEkB,KAAjB,UACI,mBAAGnB,UAAWC,IAAEmB,UAAhB,mBAAqCP,KAGzC,qBAAIb,UAAWC,IAAEkB,KAAjB,UACI,mBAAGnB,UAAWC,IAAEmB,UAAhB,uBAAyCN,KAG7C,qBAAId,UAAWC,IAAEkB,KAAjB,UACI,mBAAGnB,UAAWC,IAAEmB,UAAhB,kBAAoCL,KAGxC,qBAAIf,UAAWC,IAAEkB,KAAjB,UACI,mBAAGnB,UAAWC,IAAEmB,UAAhB,oBAAsCJ,KAG1C,qBAAIhB,UAAWC,IAAEkB,KAAjB,UACI,mBAAGnB,UAAWC,IAAEmB,UAAhB,gCAAkDH,EADtD,a,gBCbDI,MAbd,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACA,qBAAKtB,UAAWC,IAAEsB,sBAAlB,SACE,mBAAGvB,UAAWC,IAAEuB,KAAhB,SAAuBF,OCCtBG,E,4MAEJC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPY,gBAAkB,SAAAC,GAAK,OAAI,WACzB,EAAKC,UAAS,SAACC,GAAD,sBACTF,EAAQE,EAAUF,GAAQ,Q,4CAKjC,WACE,MAA+BG,KAAKL,MAA5Bb,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBX,EAAU4B,OAAOC,KAAKF,KAAKL,OAC3BQ,EAAqBrB,EAAOC,EAAUC,EACtCoB,EAAkCC,KAAKC,MAAOxB,EAAOqB,EAAsB,KACjF,OACE,qCACE,cAAC,EAAD,CAASpC,MAAO,wBAAhB,SACA,cAAC,EAAD,CAAiBM,QAASA,EAASC,gBAAiB0B,KAAKJ,oBAIxDO,EAAqB,EACpB,cAAC,EAAD,CAASpC,MAAO,aAAhB,SACA,cAAC,EAAD,CACEe,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOkB,EACPjB,mBAAoBkB,MAGpB,cAAC,EAAD,CAAcb,QAAS,6B,GApCjBgB,aA0CHb,IC5Cfc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1e7ecb4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3AMs6\",\"item\":\"Statistics_item__1PhV6\",\"countText\":\"Statistics_countText__1i82J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__2rHf5\",\"title\":\"Section_title__1V5Ak\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnFeedback\":\"FeedbackOptions_btnFeedback__vs2Y4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__3w-0-\",\"notificationContainer\":\"Notification_notificationContainer__3VZ5T\"};","import s from \"./Section.module.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\nexport default Section;","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nfunction FeedbackOptions({options,onLeaveFeedback}) {\r\n    return (\r\n               <div className={s.btnBox}>\r\n            {options.map(option=>(\r\n                <button\r\n                    className={s.btnFeedback}\r\n                    key={option}\r\n                    type=\"button\"\r\n                    onClick={onLeaveFeedback(option)}>\r\n                    {option}\r\n                    </button>\r\n            ))}\r\n               </div>\r\n        \r\n    )\r\n}\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nfunction Statistics({\r\n    good,\r\n    neutral,\r\n    bad,\r\n    total,\r\n    positivePercentage,\r\n}) {\r\n    return (\r\n        <div className={s.container}>\r\n            <ul className={s.list}>\r\n                <li className={s.item}>\r\n                    <p className={s.countText}>Good:</p>{good}\r\n                </li>\r\n\r\n                <li className={s.item}>\r\n                    <p className={s.countText}> Neutral:</p>{neutral}\r\n                </li>\r\n                \r\n                <li className={s.item}>\r\n                    <p className={s.countText}>Bad:</p>{bad}\r\n                </li>\r\n                \r\n                <li className={s.item}>\r\n                    <p className={s.countText}>Total:</p>{total}\r\n                </li>\r\n                \r\n                <li className={s.item}>\r\n                    <p className={s.countText}>Positive feedback:</p>{positivePercentage}%\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n};\r\n \r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;","import s from './Notification.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n function Notification({ message }) {\r\n   return (\r\n   <div className={s.notificationContainer}>\r\n     <p className={s.text}>{message}</p>\r\n   </div>\r\n     \r\n   )\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import './App.css';\nimport { Component } from \"react\";\nimport Section from './Section';\nimport FeedbackOptions from './FeedbackOptions';\nimport Statistics from './Statistics';\nimport Notification from './Notification';\n\nclass App extends Component {\n  \n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n  handleIncrement = value => () => {\n    this.setState((prevState ) => ({\n        [value]: prevState[value] +1,\n      }\n    ) )\n  }\n  \n  render() {\n    const { good, neutral, bad } = this.state;\n    const options = Object.keys(this.state);\n    const countTotalFeedback = good + neutral + bad;\n    const countPositiveFeedbackPercentage = Math.round((good / countTotalFeedback) * 100);\n    return (\n      <>\n        <Section title={\"Please leave feedback\"}>\n        <FeedbackOptions options={options} onLeaveFeedback={this.handleIncrement} />\n        </Section>\n        \n        \n        {countTotalFeedback > 0 ? (\n          <Section title={\"Statistics\"}>\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback}\n            positivePercentage={countPositiveFeedbackPercentage} />\n        </Section>\n        ) : (\n            <Notification message={\"No feedback given\"}/>     \n          )}\n      </>\n    )}\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}